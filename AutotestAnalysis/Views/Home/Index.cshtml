@{
    Layout = null;
    ViewBag.Title = "Index";
}
<!doctype html>
<style>
    .node circle {
        fill: #fff;
        stroke: steelblue;
        stroke-width: 1.5px;
    }

    .node {
        font: 14px sans-serif;
    }

    .link {
        fill: none;
        stroke: #ccc;
        stroke-width: 1.5px;
    }
</style>
<html>
<head>
    <title>Hello ASP.NET MVC Core</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width">
</head>
<body>
    <div id="elementSelector">
        <div id="plot"></div>
    </div>


    <script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
    <script>
        var clusters = {
                "name": "base",
                "children": @Html.Raw(@ViewBag.Cluster.ToString()),
            };

        var width = @ViewBag.Width,
            height = @ViewBag.Height;

        var cluster = d3.layout.cluster().size([window.height, window.width - 450]);

        var diagonal = d3.svg.diagonal()
            .projection(function (d) { return [d.y, d.x]; });

        var svg = d3.select("#plot").append("svg")
            .attr("width", width)
            .attr("height", height)
            .append("g")
            .attr("transform", "translate(40,0)");

        var nodes = cluster.nodes(clusters),
            links = cluster.links(nodes);

        var link = svg.selectAll(".link")
            .data(links)
            .enter().append("path")
            .attr("class", "link")
            .attr("d", diagonal);

        var node = svg.selectAll(".node")
            .data(nodes)
            .enter().append("g")
            .attr("class", "node")
            .attr("transform", function (d) { return "translate(" + d.y + "," + d.x + ")"; })

        node.append("circle")
            .attr("r", 4.5);

        node.append("text")
            .attr("dx", function (d) { return d.children ? -8 : 8; })
            .attr("dy", 3)
            .style("text-anchor", function (d) { return d.children ? "end" : "start"; })
            .text(function (d) { return d.name; });

        d3.select(self.frameElement).style("height", height + "px");
    </script>
</body>
</html>
